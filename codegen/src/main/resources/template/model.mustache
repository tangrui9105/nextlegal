package {{package}};

{{#imports}}import {{import}};
{{/imports}}

import com.fasterxml.jackson.annotation.JsonProperty;
import javax.validation.Valid;
import javax.validation.constraints.*;
{{#models}}

    {{#model}}{{#description}}
    /**
    * {{description}}
    **/{{/description}}
    public class {{classname}} {{#parent}}extends {{{parent}}}{{/parent}} {
    {{#vars}}{{#isEnum}}
        public enum {{datatypeWithEnum}} {
        {{#allowableValues}}{{#values}} {{.}}, {{/values}}{{/allowableValues}}
        };
        private {{{datatypeWithEnum}}} {{name}} = {{{defaultValue}}};{{/isEnum}}{{^isEnum}}
        private {{{datatype}}} {{name}} = {{{defaultValue}}};{{/isEnum}}{{/vars}}

    {{#vars}}
        /**{{#description}}
            * {{{description}}}{{/description}}{{#minimum}}
            * minimum: {{minimum}}{{/minimum}}{{#maximum}}
            * maximum: {{maximum}}{{/maximum}}
        **/
        @JsonProperty("{{name}}")
        @Valid{{#required}}
        @NotNull{{/required}}{{#maximum}}
        @Max({{maximum}}){{/maximum}}{{#minimum}}
        @Min({{minimum}}){{/minimum}}
        public {{{datatypeWithEnum}}} {{getter}}() {
            return {{name}};
        }
        public void {{setter}}({{{datatypeWithEnum}}} {{name}}) {
            this.{{name}} = {{name}};
        }
    {{/vars}}

        @Override
        public String toString()  {
            StringBuilder sb = new StringBuilder();
            sb.append("class {{classname}} {\n");
            {{#parent}}sb.append("  " + super.toString()).append("\n");{{/parent}}
            {{#vars}}sb.append("  {{name}}: ").append({{name}}).append("\n");
            {{/vars}}sb.append("}\n");
            return sb.toString();
        }
    }
    {{/model}}
{{/models}}
